{
  "id": "a77f39bd-1e63-4b5e-9542-5557acc38900",
  "prevId": "979e92d2-43a0-48cc-adea-8b1642849472",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.configuration": {
      "name": "configuration",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "sessions": {
          "name": "sessions",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "time": {
          "name": "time",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "equipment": {
          "name": "equipment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "experience_id": {
          "name": "experience_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "generate_automatically": {
          "name": "generate_automatically",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created": {
          "name": "created",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "configuration_user_id_profile_id_fk": {
          "name": "configuration_user_id_profile_id_fk",
          "tableFrom": "configuration",
          "tableTo": "profile",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "configuration_experience_id_experience_id_fk": {
          "name": "configuration_experience_id_experience_id_fk",
          "tableFrom": "configuration",
          "tableTo": "experience",
          "columnsFrom": [
            "experience_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "User can handle their own configurations": {
          "name": "User can handle their own configurations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.configuration_to_preferred_day": {
      "name": "configuration_to_preferred_day",
      "schema": "",
      "columns": {
        "configuration_id": {
          "name": "configuration_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "preferred_day_id": {
          "name": "preferred_day_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "configuration_to_preferred_day_configuration_id_configuration_id_fk": {
          "name": "configuration_to_preferred_day_configuration_id_configuration_id_fk",
          "tableFrom": "configuration_to_preferred_day",
          "tableTo": "configuration",
          "columnsFrom": [
            "configuration_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "configuration_to_preferred_day_preferred_day_id_preferred_day_id_fk": {
          "name": "configuration_to_preferred_day_preferred_day_id_preferred_day_id_fk",
          "tableFrom": "configuration_to_preferred_day",
          "tableTo": "preferred_day",
          "columnsFrom": [
            "preferred_day_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "configuration_to_preferred_day_configuration_id_preferred_day_id_pk": {
          "name": "configuration_to_preferred_day_configuration_id_preferred_day_id_pk",
          "columns": [
            "configuration_id",
            "preferred_day_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can handle configurationsToPreferredDay": {
          "name": "Authenticated can handle configurationsToPreferredDay",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.configuration_to_workout_type": {
      "name": "configuration_to_workout_type",
      "schema": "",
      "columns": {
        "configuration_id": {
          "name": "configuration_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workout_type_id": {
          "name": "workout_type_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "configuration_to_workout_type_configuration_id_configuration_id_fk": {
          "name": "configuration_to_workout_type_configuration_id_configuration_id_fk",
          "tableFrom": "configuration_to_workout_type",
          "tableTo": "configuration",
          "columnsFrom": [
            "configuration_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "configuration_to_workout_type_workout_type_id_workout_type_id_fk": {
          "name": "configuration_to_workout_type_workout_type_id_workout_type_id_fk",
          "tableFrom": "configuration_to_workout_type",
          "tableTo": "workout_type",
          "columnsFrom": [
            "workout_type_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "configuration_to_workout_type_configuration_id_workout_type_id_pk": {
          "name": "configuration_to_workout_type_configuration_id_workout_type_id_pk",
          "columns": [
            "configuration_id",
            "workout_type_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can handle configurationsToWorkoutTypes": {
          "name": "Authenticated can handle configurationsToWorkoutTypes",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.experience": {
      "name": "experience",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Supabase auth admin can handle experience": {
          "name": "Supabase auth admin can handle experience",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "supabase_auth_admin"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.feedback": {
      "name": "feedback",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "feedback": {
          "name": "feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created": {
          "name": "created",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "feedback_user_id_profile_id_fk": {
          "name": "feedback_user_id_profile_id_fk",
          "tableFrom": "feedback",
          "tableTo": "profile",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can insert feedback": {
          "name": "Authenticated can insert feedback",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.preferred_day": {
      "name": "preferred_day",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "number": {
          "name": "number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Supabase auth admin can handle preferred day": {
          "name": "Supabase auth admin can handle preferred day",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "supabase_auth_admin"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.profile": {
      "name": "profile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "membership_end_date": {
          "name": "membership_end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created": {
          "name": "created",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profile_id_fk": {
          "name": "profile_id_fk",
          "tableFrom": "profile",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can view all profiles": {
          "name": "Authenticated can view all profiles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "User can handle their own programs": {
          "name": "User can handle their own programs",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = id"
        },
        "Supabase auth admin can insert profile": {
          "name": "Supabase auth admin can insert profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "supabase_auth_admin"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.program": {
      "name": "program",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "archived": {
          "name": "archived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created": {
          "name": "created",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "program_user_id_profile_id_fk": {
          "name": "program_user_id_profile_id_fk",
          "tableFrom": "program",
          "tableTo": "profile",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "User can handle their own programs": {
          "name": "User can handle their own programs",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.program_metadata": {
      "name": "program_metadata",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "prompt": {
          "name": "prompt",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "prompt_tokens": {
          "name": "prompt_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "completion_tokens": {
          "name": "completion_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "program_id": {
          "name": "program_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "program_metadata_program_id_program_id_fk": {
          "name": "program_metadata_program_id_program_id_fk",
          "tableFrom": "program_metadata",
          "tableTo": "program",
          "columnsFrom": [
            "program_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Supabase auth admin can handle program metadata": {
          "name": "Supabase auth admin can handle program metadata",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "supabase_auth_admin"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.waiting_list": {
      "name": "waiting_list",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created": {
          "name": "created",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Anyone can insert to waiting list": {
          "name": "Anyone can insert to waiting list",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.warmup": {
      "name": "warmup",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "workout_id": {
          "name": "workout_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "warmup_workout_id_workout_id_fk": {
          "name": "warmup_workout_id_workout_id_fk",
          "tableFrom": "warmup",
          "tableTo": "workout",
          "columnsFrom": [
            "workout_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "warmup_workout_id_unique": {
          "name": "warmup_workout_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "workout_id"
          ]
        }
      },
      "policies": {
        "Authenticated can handle warmup": {
          "name": "Authenticated can handle warmup",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.warmup_exercise": {
      "name": "warmup_exercise",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "execution": {
          "name": "execution",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "warmup_id": {
          "name": "warmup_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "warmup_exercise_warmup_id_warmup_id_fk": {
          "name": "warmup_exercise_warmup_id_warmup_id_fk",
          "tableFrom": "warmup_exercise",
          "tableTo": "warmup",
          "columnsFrom": [
            "warmup_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can handle warmupExercise": {
          "name": "Authenticated can handle warmupExercise",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.workout": {
      "name": "workout",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "date": {
          "name": "date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "program_id": {
          "name": "program_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "workout_program_id_program_id_fk": {
          "name": "workout_program_id_program_id_fk",
          "tableFrom": "workout",
          "tableTo": "program",
          "columnsFrom": [
            "program_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can handle workout": {
          "name": "Authenticated can handle workout",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.workout_exercise": {
      "name": "workout_exercise",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "execution": {
          "name": "execution",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "workout_id": {
          "name": "workout_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "workout_exercise_workout_id_workout_id_fk": {
          "name": "workout_exercise_workout_id_workout_id_fk",
          "tableFrom": "workout_exercise",
          "tableTo": "workout",
          "columnsFrom": [
            "workout_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated can handle workoutExercise": {
          "name": "Authenticated can handle workoutExercise",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.workout_type": {
      "name": "workout_type",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Supabase auth admin can handle workout types": {
          "name": "Supabase auth admin can handle workout types",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "supabase_auth_admin"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}